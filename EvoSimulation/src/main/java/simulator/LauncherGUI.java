package simulator;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import simulator.control.Controller;
import simulator.view.EntityViewer;
import simulator.view.TimeLabel;
import simulator.view.viewer.AbstractViewer;
import simulator.view.viewer.EmptyViewer;
import simulator.view.viewer.Viewer;
import simulator.view.viewer.Viewer3D;

public class LauncherGUI extends javax.swing.JFrame {
	private Controller controller;
	private HashMap<String,AbstractViewer>viewersMap;
	private AbstractViewer viewer;
	private boolean simStop;
	private ViewersController viewsController;
	EntityViewer entityViewer;
	
	public LauncherGUI(Controller controller) {
		simStop = false;
		this.controller = controller;
		initComponents();
		entityViewer = new EntityViewer(jspExperimentViewer);
        viewsController = new ViewersController();
        configureComponents();
	}
	
	class ViewersController{
		public ViewersController() {
			viewersMap = new HashMap<String,AbstractViewer>();
			viewersMap.put(jrbTemperatureView.getActionCommand(), new Viewer(controller));
			viewersMap.put(jrb3DView.getActionCommand(), new Viewer3D(controller));
			viewersMap.put(jrbNone.getActionCommand(), new EmptyViewer(controller));
			changeView(jrbTemperatureView.getActionCommand());
		}
		
		public void changeView(String key) {
			for(String k:viewersMap.keySet()) {
				if(k.equals(key)) {
					viewer = viewersMap.get(key);
					viewer.activate();
					jScrollPane1.setViewportView(viewer);
					
				}
				else {
					viewersMap.get(k).deactivate();
				}
			}jScrollPane1.repaint();
		}
	}
	
    /** Creates new form LauncherGUI */
    public LauncherGUI() {
    	/*simStop = false;
    	simulator = new EvoSimulator();
    	controller = new Controller(simulator,null);
        initComponents();
        configureComponents();*/
    }

    private void configureComponents() {
    	jTabbedPane1.addTab("Code", entityViewer.getCodeComponent());
    	jTabbedPane1.addTab("FitnessScores", entityViewer.geFitnessScoresComponent());
    	
    	viewersMap.get(jrbTemperatureView.getActionCommand()).addEntityObserver(entityViewer);
    	
    	
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        //viewer = new Viewer(controller);
        jbPlay = new javax.swing.JButton();
        jbPause = new javax.swing.JButton();
        jpTime = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlSimulationTime = new TimeLabel(controller);
        jbAddEntity = new javax.swing.JButton();
        //jp3DViewer = new Viewer3D(controller);
        jbAddEvent = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jrbTemperatureView = new javax.swing.JRadioButton();
        jrb3DView = new javax.swing.JRadioButton();
        jrbNone = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpExperiments = new javax.swing.JPanel();
        jspExperimentViewer = new javax.swing.JScrollPane();
        jcbExperiments = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbPlay.setText("Play");
        jbPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPlayActionPerformed(evt);
            }
        });

        jbPause.setText("Pause");
        jbPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPauseActionPerformed(evt);
            }
        });

        jLabel1.setText("Time:");

        jlSimulationTime.setBackground(new java.awt.Color(255, 255, 255));
        jlSimulationTime.setText("0");

        javax.swing.GroupLayout jpTimeLayout = new javax.swing.GroupLayout(jpTime);
        jpTime.setLayout(jpTimeLayout);
        jpTimeLayout.setHorizontalGroup(
            jpTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTimeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlSimulationTime, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jpTimeLayout.setVerticalGroup(
            jpTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTimeLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jpTimeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlSimulationTime, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jbAddEvent.setText("Add Event");
        jbAddEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddEventActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(new javax.swing.border.MatteBorder(null));

        jbAddEntity.setText("Add Entity");
        jbAddEntity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAddEntityActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbTemperatureView);
        jrbTemperatureView.setSelected(true);
        jrbTemperatureView.setText("TemperatureView");
        jrbTemperatureView.setToolTipText("");
        jrbTemperatureView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTemperatureViewActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrb3DView);
        jrb3DView.setText("3DView");
        jrb3DView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb3DViewActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbNone);
        jrbNone.setText("None");
        jrbNone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNoneActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(new javax.swing.border.MatteBorder(null));

        jcbExperiments.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SimpleMazeTest", "SimpleMazeTest2" }));
        jcbExperiments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbExperimentsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpExperimentsLayout = new javax.swing.GroupLayout(jpExperiments);
        jpExperiments.setLayout(jpExperimentsLayout);
        jpExperimentsLayout.setHorizontalGroup(
            jpExperimentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpExperimentsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpExperimentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspExperimentViewer, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpExperimentsLayout.createSequentialGroup()
                        .addComponent(jcbExperiments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 645, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpExperimentsLayout.setVerticalGroup(
            jpExperimentsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpExperimentsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspExperimentViewer, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbExperiments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Experiments", jpExperiments);

        jScrollPane2.setViewportView(jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbPause, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jpTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAddEntity, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbAddEvent)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrbTemperatureView)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jrbNone))
                            .addComponent(jrb3DView))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbPause, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                            .addComponent(jpTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbAddEntity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbAddEvent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jrbTemperatureView)
                            .addComponent(jrbNone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrb3DView)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>                          

    private void jbPlayActionPerformed(java.awt.event.ActionEvent evt) {     
    	simStop = false;
    	runEvent(10000);
    	
    }                                      

    private void runEvent(int n) {
    	if ( n>0 && !simStop) {
	         try {
	        	 controller.run(1);
	         } catch (Exception e) {
	        	 e.printStackTrace();
	        	 JOptionPane.showMessageDialog(this, e);
	             return;
	         }
	         SwingUtilities.invokeLater( new Runnable() {
	        	@Override
	     		public void run() {
	        		runEvent(n);
	     		}
	         });
	   } 

	}

	private void jbPauseActionPerformed(java.awt.event.ActionEvent evt) {                                        
        pauseEvent();
    }                                       
	
    private void pauseEvent() {
    	simStop = true;
	}
    
    private void jbAddEntityActionPerformed(java.awt.event.ActionEvent evt) {                                            
        controller.addRandomEntity();
    }
    
    private void jbAddEventActionPerformed(java.awt.event.ActionEvent evt) {      
    	JFileChooser jfc = new JFileChooser("resources/loads/events");
		int returnValue = jfc.showOpenDialog(null);

		if (returnValue == JFileChooser.APPROVE_OPTION) {
			File selectedFile = jfc.getSelectedFile();
			//System.out.println(selectedFile.getAbsolutePath());
			try {
				controller.addEvent(new FileInputStream(selectedFile));
			
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
        
    }   
    private void jrbTemperatureViewActionPerformed(java.awt.event.ActionEvent evt) {                                        
    	viewsController.changeView(evt.getActionCommand());
    }                                                  

    private void jrb3DViewActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	viewsController.changeView(evt.getActionCommand());
    }      
    private void jrbNoneActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	viewsController.changeView(evt.getActionCommand());
    } 
    private void jcbExperimentsActionPerformed(java.awt.event.ActionEvent evt) {     
    	this.entityViewer.runExperiment(this.jcbExperiments.getSelectedItem().toString());
    }
	/**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
  
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LauncherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LauncherGUI().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify                   
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAddEntity;
    private javax.swing.JButton jbAddEvent;
    private javax.swing.JButton jbPause;
    private javax.swing.JButton jbPlay;
    private javax.swing.JComboBox<String> jcbExperiments;
    private javax.swing.JLabel jlSimulationTime;
    private javax.swing.JPanel jpExperiments;
    private javax.swing.JPanel jpTime;
    private javax.swing.JRadioButton jrb3DView;
    private javax.swing.JRadioButton jrbNone;
    private javax.swing.JRadioButton jrbTemperatureView;
    private javax.swing.JScrollPane jspExperimentViewer;
    // End of variables declaration                   

}

