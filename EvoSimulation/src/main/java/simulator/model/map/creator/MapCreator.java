package simulator.model.map.creator;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author fabrizioortega
 */

public class MapCreator extends javax.swing.JFrame {
	private static final long serialVersionUID = 2L;

	private PanelManager panelManager;

	/**
	 * Creates new form MapCreator
	 */
	public MapCreator() {
		panelManager = new PanelManager();
		initComponents();
		
	}

	protected class PanelManager {
		public PanelManager() {

		}

		public void savePanels(String filename) {
			BufferedImage terrain = terrainPanel.getBufferImage();
			BufferedImage attributes = attributesPanel.getBufferImage();
			BufferedImage elevation = elevationPanel.getBufferImage();

			try {
				String file = "resources/maps/" + filename;
				boolean t = new File(file).mkdirs();
				ImageIO.write(terrain, "png", new File(file + "/terrain.png"));
				ImageIO.write(attributes, "png", new File(file + "/attributes.png"));
				ImageIO.write(elevation, "png", new File(file + "/elevation.png"));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		public void loadPanels(String filePath) {
			try {
				terrainPanel.setImage(ImageIO.read(new File(filePath + "/terrain.png")));
				attributesPanel.setImage(ImageIO.read(new File(filePath + "/attributes.png")));
				elevationPanel.setImage(ImageIO.read(new File(filePath + "/elevation.png")));
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		public void globalResize(int w, int h) {
			terrainPanel.resizeCanvas(w,h);
			attributesPanel.resizeCanvas(w,h);
			elevationPanel.resizeCanvas(w,h);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jtpMainPanel = new javax.swing.JTabbedPane();
		terrainPanel = new TerrainPanel(panelManager);
		attributesPanel = new AttributesPanel(panelManager);
		elevationPanel = new ElevationPanel(panelManager);
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jmiOpen = new javax.swing.JMenuItem();
		jmiSave = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setMaximumSize(new java.awt.Dimension(1400, 750));
		setMinimumSize(new java.awt.Dimension(1400, 750));

		jtpMainPanel.addTab("Terrain", terrainPanel);
		jtpMainPanel.addTab("Attributes", attributesPanel);
		jtpMainPanel.addTab("Elevation", elevationPanel);

		jMenu1.setText("File");

		jmiOpen.setText("Open");
		jmiOpen.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiOpenActionPerformed(evt);
			}
		});
		jMenu1.add(jmiOpen);

		jmiSave.setText("Save");
		jmiSave.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jmiSaveActionPerformed(evt);
			}
		});
		jMenu1.add(jmiSave);

		jMenuBar1.add(jMenu1);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jtpMainPanel)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jtpMainPanel, javax.swing.GroupLayout.Alignment.TRAILING));

		pack();
	}// </editor-fold>

	private void jmiOpenActionPerformed(java.awt.event.ActionEvent evt) {
		JFileChooser jfc = new JFileChooser("resources/maps/");
		jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		int returnValue = jfc.showOpenDialog(null);

		if (returnValue == JFileChooser.APPROVE_OPTION) {
			File selectedFile = jfc.getSelectedFile();

			try {
				panelManager.loadPanels(selectedFile.getCanonicalPath());
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}

		}
	}

	private void jmiSaveActionPerformed(java.awt.event.ActionEvent evt) {
		JDialog jd = new JDialog(this);
		JPanel mainPanel = new JPanel(new BorderLayout());
		mainPanel.setMaximumSize(new Dimension(100, 50));
		mainPanel.setMinimumSize(new Dimension(100, 50));
		mainPanel.setPreferredSize(new Dimension(100, 50));
		jd.setContentPane(mainPanel);
		final JTextField jtxt = new JTextField("filename");
		JButton jbSave = new JButton("Save");
		jbSave.addActionListener((ae) -> {
			panelManager.savePanels(jtxt.getText());
			jd.dispose();
		});
		JButton jbCancel = new JButton("Cancel");
		jbCancel.addActionListener((ae) -> jd.dispose());
		mainPanel.add(jtxt, BorderLayout.CENTER);

		JPanel boxPanel = new JPanel();
		boxPanel.setLayout(new BoxLayout(boxPanel, BoxLayout.LINE_AXIS));
		boxPanel.add(jbSave);
		boxPanel.add(jbCancel);
		mainPanel.add(boxPanel, BorderLayout.SOUTH);

		jd.pack();
		jd.setLocationRelativeTo(null);
		jd.setVisible(true);

	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MapCreator.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MapCreator.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MapCreator.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MapCreator.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MapCreator().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private AbstractCreatorPanel attributesPanel;
	private AbstractCreatorPanel elevationPanel;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jmiOpen;
	private javax.swing.JMenuItem jmiSave;
	private javax.swing.JTabbedPane jtpMainPanel;
	private AbstractCreatorPanel terrainPanel;
	// End of variables declaration
}
