package grammar.bnf;

import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

class BNFParserTest {

	@Test
	void testParse() {
		String s ="<OBS> -> 'r_f_d'|'l_f_d'|'u_f_d'|'d_f_d'.\n"
				+ "<OP> -> '<'|'>'|'<='|'>='.\n"
				+ "<AR> -> '+'|'*'|'-'.\n"
				+ "<CODE> -> <LINE>|<CODE> <LINE>.\n"
				+ "<ACTION> -> 'RIGHT'|'LEFT'|'UP'|'DOWN'|'NEUTRAL'.\n"
				+ "<V> -> '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'.\n"
				+ "<AREXP> -> <OBS>|<V>|<AREXP> <AR> <AREXP>.\n"
				+ "<LINE> -> <ACTION> ';'|<IF>.\n"
				+ "<Pi> -> '0'|'1'|'2'|'3'|'4'|'5'|'6'|'7'.\n"
				+ "<IF> -> 'if' <COND> '{' <LINE> '}' 'else' '{' <LINE> '}'|'if' <COND> '{' <LINE> '}'.\n"
				+ "<COND> -> '(' <OBS> ')' | '(' <OBS> <OP> <OBS> ')' | '(' '(' <AREXP> ')' <OP> '(' <AREXP> ')' ')'.\n"
				+ "<LOGOP> -> '||' | '&&'.";
		BNFParser parser = new BNFParser();
		
		String exp = "{\n"
				+ "    \"rules\": [\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"OBS\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"r_f_d\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"l_f_d\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"u_f_d\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"d_f_d\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"OP\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"<\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \">\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"<=\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \">=\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"AR\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"+\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"*\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"-\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"CODE\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"LINE\",\n"
				+ "                    \"type\": \"NonTerminal\"\n"
				+ "                }],\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"CODE\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"LINE\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    }\n"
				+ "                ]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"ACTION\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"RIGHT\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"LEFT\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"UP\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"DOWN\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"NEUTRAL\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"V\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"0\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"1\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"2\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"3\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"4\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"5\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"6\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"7\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"AREXP\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"OBS\",\n"
				+ "                    \"type\": \"NonTerminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"V\",\n"
				+ "                    \"type\": \"NonTerminal\"\n"
				+ "                }],\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"AREXP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"AR\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"AREXP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    }\n"
				+ "                ]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"LINE\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"ACTION\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \";\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ],\n"
				+ "                [{\n"
				+ "                    \"id\": \"IF\",\n"
				+ "                    \"type\": \"NonTerminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"Pi\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"0\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"1\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"2\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"3\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"4\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"5\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"6\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"7\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"IF\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"if\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"COND\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"{\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"LINE\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"}\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"else\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"{\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"LINE\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"}\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ],\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"if\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"COND\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"{\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"LINE\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"}\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"COND\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"(\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"OBS\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \")\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ],\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"(\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"OBS\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"OP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"OBS\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \")\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ],\n"
				+ "                [\n"
				+ "                    {\n"
				+ "                        \"id\": \"(\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"(\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"AREXP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \")\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"OP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"(\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \"AREXP\",\n"
				+ "                        \"type\": \"NonTerminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \")\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    },\n"
				+ "                    {\n"
				+ "                        \"id\": \")\",\n"
				+ "                        \"type\": \"Terminal\"\n"
				+ "                    }\n"
				+ "                ]\n"
				+ "            ]\n"
				+ "        },\n"
				+ "        {\n"
				+ "            \"name\": {\n"
				+ "                \"id\": \"LOGOP\",\n"
				+ "                \"type\": \"NonTerminal\"\n"
				+ "            },\n"
				+ "            \"productions\": [\n"
				+ "                [{\n"
				+ "                    \"id\": \"||\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }],\n"
				+ "                [{\n"
				+ "                    \"id\": \"&&\",\n"
				+ "                    \"type\": \"Terminal\"\n"
				+ "                }]\n"
				+ "            ]\n"
				+ "        }\n"
				+ "    ],\n"
				+ "    \"type\": \"Grammar\"\n"
				+ "}";
		assertEquals(exp,parser.parse(s).toString(4));
	}

}
